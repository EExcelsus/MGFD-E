여러 명의 유저가 사용할 맵이나 규칙 등 공통적인 것에 대하여 고르고 여러 사람들의 선택 중 랜덤 한 것을 고르는 알고리즘을 작성한다고 하자, 
 이 때 많이 사용할 방법이 완전 랜덤이나 혹은 민주주의적 절차를 통한 다수결인데 완전 랜덤의 경우 일부 운 안 좋은 유저가 상대적으로 
 나쁜 경험을 가질 우려가 있고 다수결의 경우 여러 명이 함께 플레이하는 유저에 비해 솔로 플레이어들이 상대적으로 손해를 볼 수 있는 만큼 
 새로운 방식에 대해 우리가 생각해 볼 가치가 있다. 이 정리에서 우리가 다룰 방식은 기본적으로는 랜덤 방식에 가깝지만, 계정에 누적 값을 두고 
 매 번 선택을 진행할 때마다 우선 정해진 범위 안에서 랜덤 한 값을 누적 값에 더하도록 하고, 그 다음 기권을 선택한 유저를 제외한 유저들의 
 누적 값을 비교하여 그중 가장 큰 값을 가진 사람의 선택을 따르되 해당 사람의 누적 값을 0으로 초기화 시키는 방법이다. 이 방법을 통해 평소에는 
 기권을 하며 누적 값을 쌓다가 자신이 원하는 것이 갑자기 생겼을 경우 우선권을 받을 수 있게 되는 장점이 있으며 운이 좋지 않은 사람이더라도 
 지속적으로 플레이를 하면서 누적 값을 쌓다 보면 결국 자신의 선택도 존중을 받을 수 있게 되는 방법이다. 
 
 이것을 단계별로 정리하면 다음과 같다:
1. 모든 계정은 온전히 항상 저장되는 변수 selectionPriority를 가지며, 값은 지우지 않도록 하고 항상 저장하면서 다음 로그인시 로드를 하도록 한다.
2. 선택을 시작할 때 모든 계정의 selectionPriority값에 random(min, max)값을 더하고 저장하도록 한다.
3. 모든 유저가 선택을 마친 경우 기권한 유저를 제외한 유저들의 selectionPriority값을 서로 비교하여 가장 큰 값을 구하고 해당 유저의 ID를 리턴한다.
4. 해당 유저의 선택을 따르도록 하고 해당 유저의 selectionPriority값은 0으로 초기화하여 저장하도록 한다.
